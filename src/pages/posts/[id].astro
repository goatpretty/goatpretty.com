---
import '../../styles/global.css';   // ✅ 显式引入全局样式
import { getCollection, render } from 'astro:content';
import Post from '../../layout/post.astro';
import Prose from '../../components/Prose.astro';
import Navigation from '../../layout/navigation.astro';
import GoBackToTop from '../../components/goBackToTop.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('posts');
  return blogEntries.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);
---

<html lang="zh-cn">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{entry.data.title ?? "GoatPretty's Blog"}</title>
  </head>

  <body>
    <Post>
      <Navigation slot="header" />

      <!-- ✅ 正文外层加 post-content，保证缩进 CSS 命中 -->
      <div class="post-content" slot="article">
        <Prose>
          <Content />
        </Prose>
      </div>

      <!-- 📌 左侧目录 -->
      <div slot="headings" class="w-11/12 space-y-1">
        {
          headings.map((heading) => (
            <a
              class={`block font-bold text-profileTextLight dark:text-profileTextDark
                      hover:bg-bgLight dark:hover:bg-bgDark
                      rounded-md w-full px-2 py-1 break-words leading-snug
                      ${heading.depth === 1 ? 'text-lg mt-1' : ''}
                      ${heading.depth === 2 ? 'pl-2 text-base' : ''}
                      ${heading.depth === 3 ? 'pl-4 text-sm' : ''}
                      ${heading.depth === 4 ? 'pl-6 text-sm opacity-90' : ''}`}
              href={`#${heading.slug}`}
            >
              {heading.text}
            </a>
          ))
        }
      </div>
    </Post>

    <GoBackToTop />
  </body>
</html>

<!-- ✅ 动态插入 Copy 按钮 & 平滑目录跳转 -->
<script>
document.addEventListener('DOMContentLoaded', () => {
  const copyButtonLabel = 'Copy';
  const codeBlocks = document.querySelectorAll('pre.astro-code');

  codeBlocks.forEach((codeBlock) => {
    // 已经有按钮的就跳过
    if (codeBlock.querySelector('.copy-code')) return;

    const copyButton = document.createElement('button');
    copyButton.className = 'copy-code cursor-copy';
    copyButton.textContent = copyButtonLabel;
    codeBlock.appendChild(copyButton);

    copyButton.addEventListener('click', async () => {
      const code = codeBlock.querySelector('code');
      const text = code?.innerText || '';
      await navigator.clipboard.writeText(text);

      copyButton.textContent = 'Copied';
      setTimeout(() => (copyButton.textContent = copyButtonLabel), 1000);
    });
  });

  // ✅ 平滑滚动目录跳转（修复类型检查）
  document.querySelectorAll("a[href^='#']").forEach((anchor) => {
    anchor.addEventListener('click', (event) => {
      event.preventDefault();
      const href = anchor.getAttribute('href');
      if (!href) return; // 防止 null / undefined
      const targetId = href.substring(1);
      const targetElement = document.getElementById(targetId);
      if (targetElement) {
        targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
      }
    });
  });
});
</script>
